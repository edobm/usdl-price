# baseURI: http://rdfs.genssiz.org/heroku
# imports: file:///HerokuPricing/GoodRelations_v1.owl
# imports: http://spinrdf.org/spin
# imports: http://tutorial.topbraid.com/heroku_vocabulary
# imports: http://www.linked-usdl.org/ns/usdl-core
# imports: http://www.linked-usdl.org/ns/usdl-price

@prefix :        <http://rdfs.genssiz.org/heroku#> .
@prefix blueprint:  <http://bizweb.sap.com/TR/blueprint#> .
@prefix ctag:    <http://commontag.org/ns#> .
@prefix dbpedia:  <http://dbpedia.org/resource/> .
@prefix dcterms:  <http://purl.org/dc/terms/> .
@prefix dctypes:  <http://purl.org/dc/dcmitype/> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix gn:      <http://www.geonames.org/ontology#> .
@prefix gr:      <http://purl.org/goodrelations/v1#> .
@prefix heroku_vocabulary:  <http://tutorial.topbraid.com/heroku_vocabulary#> .
@prefix http:    <http://www.w3.org/2011/http#> .
@prefix language:  <http://www.lingvoj.org/lang/> .
@prefix legal:   <http://www.linked-usdl.org/ns/usdl-legal#> .
@prefix msm:     <http://cms-wg.sti2.org/ns/minimal-service-model#> .
@prefix org:     <http://www.w3.org/ns/org#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sarest:  <http://www.knoesis.org/research/srl/standards/sa-rest/#> .
@prefix sawsdl:  <http://www.w3.org/ns/sawsdl#> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix sla:     <http://www.linked-usdl.org/ns/usdl-sla#> .
@prefix sp:      <http://spinrdf.org/sp#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix spl:     <http://spinrdf.org/spl#> .
@prefix time:    <http://www.w3.org/2006/time#> .
@prefix usdl-core:  <http://www.linked-usdl.org/ns/usdl-core#> .
@prefix usdl-price:  <http://www.linked-usdl.org/ns/usdl-price#> .
@prefix vcard:   <http://www.w3.org/2006/vcard/ns#> .
@prefix wl:      <http://www.wsmo.org/ns/wsmo-lite#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

<http://rdfs.genssiz.org/heroku>
      rdf:type owl:Ontology ;
      rdfs:label "Heroku service descriptions" ;
      dcterms:contributor
              [ rdf:type foaf:Person ;
                foaf:firstName "Jorge" ;
                foaf:lastName "Araújo" ;
                foaf:name "Jorge Araújo"
              ] ;
      dcterms:created "2013-02-18"^^xsd:date ;
      dcterms:description "Heroku description example" ;
      dcterms:modified "2013-03-15"^^xsd:date ;
      dcterms:title "Heroku description example" ;
      owl:imports <http://www.linked-usdl.org/ns/usdl-price> , <http://www.linked-usdl.org/ns/usdl-core> , <http://spinrdf.org/spin> , <http://tutorial.topbraid.com/heroku_vocabulary> , <file:///HerokuPricing/GoodRelations_v1.owl> ;
      owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

:Function_Dynos
      rdf:type spin:Function ;
      rdfs:label "Dynos Function"^^xsd:string ;
      rdfs:subClassOf spin:Functions ;
      spin:body
              [ rdf:type sp:Select ;
                sp:resultVariables ([ sp:varName "price"^^xsd:string
                          ]) ;
                sp:where ([ sp:object
                                    [ sp:varName "a"^^xsd:string
                                    ] ;
                            sp:predicate usdl-price:hasValue ;
                            sp:subject :Variable_Dyno_Hour_Cost
                          ] [ sp:object
                                    [ sp:varName "cost"^^xsd:string
                                    ] ;
                            sp:predicate gr:hasValueInteger ;
                            sp:subject
                                    [ sp:varName "a"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "b"^^xsd:string
                                    ] ;
                            sp:predicate usdl-price:hasValue ;
                            sp:subject :Variable_Web_Dynos_Hours
                          ] [ sp:object
                                    [ sp:varName "web_hours"^^xsd:string
                                    ] ;
                            sp:predicate gr:hasValueInteger ;
                            sp:subject
                                    [ sp:varName "b"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "c"^^xsd:string
                                    ] ;
                            sp:predicate usdl-price:hasValue ;
                            sp:subject :Variable_Web_Dynos_Hours
                          ] [ sp:object
                                    [ sp:varName "worker_hours"^^xsd:string
                                    ] ;
                            sp:predicate gr:hasValueInteger ;
                            sp:subject
                                    [ sp:varName "c"^^xsd:string
                                    ]
                          ] [ rdf:type sp:Bind ;
                            sp:expression
                                    [ rdf:type sp:mul ;
                                      sp:arg1 [ rdf:type sp:add ;
                                                sp:arg1 [ sp:varName "web_hours"^^xsd:string
                                                        ] ;
                                                sp:arg2 [ sp:varName "worker_hours"^^xsd:string
                                                        ]
                                              ] ;
                                      sp:arg2 [ sp:varName "cost"^^xsd:string
                                              ]
                                    ] ;
                            sp:variable
                                    [ sp:varName "price"^^xsd:string
                                    ]
                          ])
              ] ;
      usdl-price:hasVariable
              :Variable_Worker_Dynos_Hours , :Variable_Web_Dynos_Hours , :Variable_Dyno_Hour_Cost .

:Function_Free_Dyno_Usage
      rdf:type spin:Function ;
      rdfs:label "Free Dyno Usage Function"^^xsd:string ;
      rdfs:subClassOf spin:Functions ;
      spin:body
              [ rdf:type sp:Select ;
                sp:resultVariables ([ sp:varName "price"^^xsd:string
                          ]) ;
                sp:where ([ sp:object
                                    [ sp:varName "a"^^xsd:string
                                    ] ;
                            sp:predicate usdl-price:hasValue ;
                            sp:subject :Variable_Dyno_Hour_Cost
                          ] [ sp:object
                                    [ sp:varName "hourPrice"^^xsd:string
                                    ] ;
                            sp:predicate gr:hasValueFloat ;
                            sp:subject
                                    [ sp:varName "a"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "b"^^xsd:string
                                    ] ;
                            sp:predicate usdl-price:hasValue ;
                            sp:subject :Variable_Free_Hours
                          ] [ sp:object
                                    [ sp:varName "hours"^^xsd:string
                                    ] ;
                            sp:predicate gr:hasValueInteger ;
                            sp:subject
                                    [ sp:varName "b"^^xsd:string
                                    ]
                          ] [ rdf:type sp:Bind ;
                            sp:expression
                                    [ rdf:type sp:mul ;
                                      sp:arg1 [ sp:varName "hours"^^xsd:string
                                              ] ;
                                      sp:arg2 [ sp:varName "hourPrice"^^xsd:string
                                              ]
                                    ] ;
                            sp:variable
                                    [ sp:varName "price"^^xsd:string
                                    ]
                          ])
              ] ;
      usdl-price:hasVariable
              :Variable_Free_Hours , :Variable_Dyno_Hour_Cost .

:Legal_Heroku
      rdf:type legal:TermsAndConditions ;
      dcterms:description "Heroku legal statements are accessible at 'https://policy.heroku.com/'. Please consult this website for further information"@en ;
      dcterms:title "Heroku legal statements"@en ;
      legal:hasClause
              [ rdf:type legal:Clause ;
                legal:name "Heroku Security" ;
                legal:text "https://policy.heroku.com/security"@en
              ] ;
      legal:hasClause
              [ rdf:type legal:Clause ;
                legal:name "Acceptable Use Policy" ;
                legal:text "https://policy.heroku.com/aup"@en
              ] ;
      legal:hasClause
              [ rdf:type legal:Clause ;
                legal:name "Privacy Policy" ;
                legal:text "https://policy.heroku.com/privacy"@en
              ] ;
      legal:hasClause
              [ rdf:type legal:Clause ;
                legal:name "Support Policy" ;
                legal:text "https://policy.heroku.com/aup"@en
              ] ;
      legal:hasClause
              [ rdf:type legal:Clause ;
                legal:name "Terms of Service" ;
                legal:text "https://policy.heroku.com/tos"@en
              ] ;
      legal:hasClause
              [ rdf:type legal:Clause ;
                legal:name "DMCA Notice" ;
                legal:text "https://policy.heroku.com/dmca"@en
              ] ;
      legal:hasClause
              [ rdf:type legal:Clause ;
                legal:name "Customer Promises" ;
                legal:text "https://policy.heroku.com/promise"@en
              ] .

:Offering_Heroku_Baku_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Baku_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Baku_Database .

:Offering_Heroku_Crane_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Crane_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Crane_Database .

:Offering_Heroku_Dynos
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "offering Heroku Dynos"^^xsd:string ;
      dcterms:description "Offering for Heroku dynos."@en ;
      dcterms:title "Heroku Dynos"@en ;
      usdl-core:includes :Service_Heroku_Dynos ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Dynos .

:Offering_Heroku_Fugu_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Fugu_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Fugu_Database .

:Offering_Heroku_Ika_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Ika_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Ika_Database .

:Offering_Heroku_Kappa_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Kappa_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Kappa_Database .

:Offering_Heroku_Mecha_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Mecha_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Mecha_Database .

:Offering_Heroku_Ronin_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Ronin_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Ronin_Database .

:Offering_Heroku_Zilla_Database
      rdf:type usdl-core:ServiceOffering ;
      rdfs:label "Offering Heroku Databases"^^xsd:string ;
      dcterms:description "Offering for Heroku Database"@en ;
      dcterms:title "Heroku database"@en ;
      usdl-core:includes :Service_Heroku_Zilla_Databases ;
      usdl-price:hasPricePlan
              :PricePlan_Heroku_Zilla_Database .

:PaaS
      rdf:type skos:Concept , rdfs:Class ;
      dcterms:description "Service model to all PaaS like services" .

:PriceComponent_Baku_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Baku Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "3200"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PriceComponent_Basic_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Basic Database"^^xsd:string .

:PriceComponent_Crane_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Crane Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "50"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PriceComponent_Dev_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Dev Database"^^xsd:string .

:PriceComponent_Dynos
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Dynos"^^xsd:string ;
      usdl-price:hasPriceFuntion
              :Function_Dynos ;
      usdl-price:hasTextFuntion
              "Number of web dynos Hours used + number of worker dynos hours used * price per hour"^^xsd:string .

:PriceComponent_Free_Dyno_Usage
      rdf:type usdl-price:Deduction ;
      rdfs:label "Free Dyno Usage"^^xsd:string ;
      usdl-price:hasPriceFuntion
              :Function_Free_Dyno_Usage ;
      usdl-price:hasTextFuntion
              "Number of free hours per month * dyno hour cost"^^xsd:string .

:PriceComponent_Fugu_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Fugu Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "400"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PriceComponent_Ika_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Ika Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "800"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PriceComponent_Kappa_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Kappa Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "100"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PriceComponent_Mecha_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Mecha Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "6400"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PriceComponent_Ronin_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Ronin Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "200"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PriceComponent_Zilla_Database
      rdf:type usdl-price:PriceComponent ;
      rdfs:label "Zilla Database"^^xsd:string ;
      usdl-price:hasPrice
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "1600"^^xsd:string ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Baku_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Baku_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Crane_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Crane_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Dynos
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Heroku Dynos Price Plan"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Free_Dyno_Usage , :PriceComponent_Dynos ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Fugu_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Fugu_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Ika_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Ika_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Kappa_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Kappa_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Mecha_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Mecha_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Ronin_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Ronin_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:PricePlan_Heroku_Zilla_Database
      rdf:type usdl-price:PricePlan ;
      rdfs:label "Price plan Heroku Databases"^^xsd:string ;
      usdl-price:hasPriceComponent
              :PriceComponent_Zilla_Database ;
      usdl-price:hasPriceFloor
              [ rdf:type gr:PriceSpecification ;
                gr:hasCurrency "USD" ;
                gr:hasCurrencyValue "0" ;
                gr:hasUnitOfMeasurement
                        "MON"
              ] .

:Service_Heroku_Baku_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku  - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Multi_Ingress , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Production_Database , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Configuration_Strings , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Fork , heroku_vocabulary:Data_Clips , heroku_vocabulary:Follow ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Database_Disk_Storage , :resource_Heroku_Baku_Cache .

:Service_Heroku_Crane_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Configuration_Strings , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Follow , heroku_vocabulary:Multi_Ingress , heroku_vocabulary:Fork , heroku_vocabulary:Data_Clips , heroku_vocabulary:Production_Database ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Crane_Cache , :resource_Heroku_Database_Disk_Storage .

:Service_Heroku_Dynos
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku"^^xsd:string ;
      dcterms:title "Heroku - Cloud Application Platform "@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Technical_Support , heroku_vocabulary:Secure_Hardened_and_Tuned_Runtime , heroku_vocabulary:Open_and_Standard_Stacks_No_Lock-in , heroku_vocabulary:Instant_Deployment_And_Scalling , heroku_vocabulary:Fast_And_Fault-Tolerant_HTTP_Routing , <http://tutorial.topbraid.com/heroku_vocabulary#24x7_Platform-Wide_Monitoring> , heroku_vocabulary:Complete_API_CLI_for_App_Management .

:Service_Heroku_Fugu_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Multi_Ingress , heroku_vocabulary:Data_Clips , heroku_vocabulary:Follow , heroku_vocabulary:Fork , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Production_Database , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Configuration_Strings ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Database_Disk_Storage , :resource_Heroku_Fugu_Cache .

:Service_Heroku_Ika_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Data_Clips , heroku_vocabulary:Fork , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Configuration_Strings , heroku_vocabulary:Follow , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Production_Database , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Multi_Ingress ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Ika_Cache , :resource_Heroku_Database_Disk_Storage .

:Service_Heroku_Kappa_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Fork , heroku_vocabulary:Data_Clips , heroku_vocabulary:Configuration_Strings , heroku_vocabulary:Multi_Ingress , heroku_vocabulary:Production_Database , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Follow ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Kappa_Cache , :resource_Heroku_Database_Disk_Storage .

:Service_Heroku_Mecha_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Configuration_Strings , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Multi_Ingress , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Follow , heroku_vocabulary:Data_Clips , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Fork , heroku_vocabulary:Production_Database ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Mecha_Cache , :resource_Heroku_Database_Disk_Storage .

:Service_Heroku_Ronin_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Data_Clips , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Production_Database , heroku_vocabulary:Configuration_Strings , heroku_vocabulary:Fork , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Follow , heroku_vocabulary:Multi_Ingress ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Database_Disk_Storage , :resource_Heroku_Ronin_Cache .

:Service_Heroku_Zilla_Databases
      rdf:type usdl-core:Service ;
      rdfs:label "Service Heroku Databases"^^xsd:string ;
      dcterms:title "Heroku - Cloud Databases"@en ;
      gr:qualitativeProductOrServiceProperty
              heroku_vocabulary:Fork , heroku_vocabulary:Follow , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Multi_Ingress , heroku_vocabulary:Production_Database , heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Data_Clips , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Configuration_Strings ;
      gr:quantitativeProductOrServiceProperty
              :resource_Heroku_Database_Disk_Storage , :resource_Heroku_Zilla_Cache .

:Variable_Dyno_Hour_Cost
      rdf:type usdl-price:Constant ;
      rdfs:label "Dyno Hour Cost"^^xsd:string ;
      usdl-price:hasValue
              [ rdf:type gr:QuantitativeValue ;
                gr:hasUnitOfMeasurement
                        "HUR" ;
                gr:hasValueFloat "0.05"^^xsd:float
              ] .

:Variable_Free_Hours
      rdf:type usdl-price:Constant ;
      rdfs:label "Free Hours"^^xsd:string ;
      usdl-price:hasValue
              [ rdf:type gr:QuantitativeValue ;
                gr:hasValueInteger 750
              ] .

:Variable_Web_Dynos_Hours
      rdf:type usdl-price:Usage ;
      rdfs:label "Web Dynos"^^xsd:string .

:Variable_Worker_Dynos_Hours
      rdf:type usdl-price:Usage ;
      rdfs:label "Worker Dynos"^^xsd:string .

:provider_Heroku
      rdf:type gr:BusinessEntity ;
      foaf:homepage <http://www.heroku.com> ;
      foaf:name "Heroku Inc" .

:resource_Heroku_Baku_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "E34"^^xsd:string ;
      gr:hasValueFloat "34"^^xsd:float .

:resource_Heroku_Crane_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "4L"^^xsd:string ;
      gr:hasValueFloat "400"^^xsd:float .

:resource_Heroku_Database_Disk_Storage
      rdf:type heroku_vocabulary:Disk_Storage ;
      gr:hasUnitOfMeasurement
              "E35"^^xsd:string ;
      gr:hasValueFloat "1"^^xsd:float .

:resource_Heroku_Fugu_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "E34"^^xsd:string ;
      gr:hasValueFloat "3.75"^^xsd:float .

:resource_Heroku_Ika_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "E34"^^xsd:string ;
      gr:hasValueFloat "7.5"^^xsd:float .

:resource_Heroku_Kappa_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "4L"^^xsd:string ;
      gr:hasValueFloat "800"^^xsd:float .

:resource_Heroku_Mecha_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "E34"^^xsd:string ;
      gr:hasValueFloat "68"^^xsd:float .

:resource_Heroku_Ronin_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "E34"^^xsd:string ;
      gr:hasValueFloat "1.7"^^xsd:float .

:resource_Heroku_Zilla_Cache
      rdf:type heroku_vocabulary:Cache ;
      gr:hasUnitOfMeasurement
              "E34"^^xsd:string ;
      gr:hasValueFloat "17"^^xsd:float .
